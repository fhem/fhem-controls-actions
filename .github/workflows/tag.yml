name: "Test Tagged Version"

on:
  push:

  create:
    tags:
      - v*


jobs:
  actiontest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        FILES_EXTENSION: [.pm, .bck, .pm.bck ]

    env:
      CONTROLS_FILE: controls_tests.txt
      FILES_DIR: ./__tests__
      FILES_EXTENSION: .pm

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - id: get_version
      uses: battila7/get-version-action@v2

    - run: echo ${{ steps.get_version.outputs.version }}
    - run: echo ${{ steps.get_version.outputs.version-without-v }}

    - name: update controls files for extension ${{ matrix.FILES_EXTENSION }} 
      uses: ./
      id: controls
      with:
        filename: ${{ env.CONTROLS_FILE }}
        directory: ${{ env.FILES_DIR }}
        extension: ${{ matrix.FILES_EXTENSION }}

    - name: Check if controls_tests.txt is written
      uses: andstor/file-existence-action@v1
      with:
        files: ${{ env.CONTROLS_FILE }}
        allow_failure: false

    - name: Check if controls_tests.txt has correct output
      id: contentCheck
      run: |
        grep "^UPD 2020-12-30_03:02:16 33     ./__tests__/mock.pm$" ${{ env.CONTROLS_FILE }} \
        && grep -v "^UPD 2021-01-05_00:05:41 33     ./__tests__/mock.pm.bck$" ${{ env.CONTROLS_FILE }} 

        echo "::set-output name=exitcode::$(echo $?)"

    - name: Check if controls output has entries as expected
      run: |
        echo "${{ steps.controls.outputs.controls_content }}"
        
    - name: Fail if there was an error during tests
      run: exit 1
      if: ${{ steps.contentCheck.outputs.exitcode != 0 }} 



